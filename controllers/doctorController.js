var formidable = require('formidable');var User = require('../models/Users');var Doctor = require('../models/Doctors');let Symptoms = require('../models/Symptom');let Medicine = require('../models/Medicine');let Prescription = require('../models/Prescription');module.exports.index = function(req, res, next){    res.redirect('/doctor/patientList');};module.exports.addPaient = function (req, res, next) {    res.render('pages/doctor/newPatient')};module.exports.autoFill = function (req,res,next) {    // console.log('in function')    User.findOne({ 'uid': req.params.id }, function (error, user) {        if(error){            res.json({ success: false, data:error });        }else if(user){            console.log(user.allergies);            res.json({ success: true, data:user});        }        else {            res.json({ success: false, data:'No User' });        }    });};module.exports.patientAdd = function (req, res, next) {    console.log('----------------IN call');    let form = new formidable.IncomingForm();    form.parse(req, function(err, fields, files) {        if(fields.patientName){            console.log('----------------IN');            let patientID = fields.patientID;            let patientNO = fields.patientNO;            let patientName = fields.patientName;            let patientImageUrl = fields.patientImage;            console.log('----------------this starts');            Doctor.findOne(                {'_id':req.session.user['_id']},                function (error,docList) {                    if(docList){                        console.log('----------------IN DOCLIST');                        let list = docList.patientList;                        console.log(list);                        if(list.length > 0){                            let patientTrue = ' ';                            for(i=0, len= list.length;i<len;i++){                                if(list[i]['patientNO'] === patientNO){                                    patientTrue = true;                                }                            }                            if(patientTrue == true){                                console.log('---------------------hai patient');                                req.flash('toastMessage', 'patient already exists');                                req.flash('toastStatus', 'success');                                res.redirect('/doctor/patientList');                            }                            else{                                console.log('---------------------Nahi hai patient Lets add :)');                                Doctor.findOneAndUpdate(                                    {'_id':req.session.user['_id']},                                    {$push:{'patientList':{'patientID':patientID,'patientNO':patientNO,'patientName':patientName, 'patientImageUrl':patientImageUrl}}},                                    {safe: true, upsert: true},                                    function (error,patient) {                                        if (error){                                            console.log(error);                                            req.flash('toastMessage', error);                                            req.flash('toastStatus', 'success');                                            res.redirect('/doctor');                                        }                                        else if (patient){                                            req.flash('toastMessage', 'patient added successfully!');                                            req.flash('toastStatus', 'success');                                            Doctor.findOne({'_id':req.session.user['_id']},function (error, doctor) {                                                req.session.user = doctor;                                            });                                            res.redirect('/doctor');                                        }                                        else {                                            req.flash('toastMessage', 'ERROR - Some Error');                                            req.flash('toastStatus', 'success');                                            res.redirect('/doctor/new');                                        }                                    });                            }                        }                        else{                            console.log('---------------------Naya hai vaha');                            Doctor.findOneAndUpdate(                                {'_id':req.session.user['_id']},                                {$push:{'patientList':{'patientID':patientID,'patientNO':patientNO,'patientName':patientName, 'patientImageUrl':patientImageUrl}}},                                {safe: true, upsert: true},                                function (error,patient) {                                    if (error){                                        console.log(error);                                        req.flash('toastMessage', error);                                        req.flash('toastStatus', 'success');                                        res.redirect('/doctor/patientList');                                    }                                    else if (patient){                                        req.flash('toastMessage', 'patient added successfully!');                                        req.flash('toastStatus', 'success');                                        Doctor.findOne({'_id':req.session.user['_id']},function (error, doctor) {                                            req.session.user = doctor;                                        });                                        res.redirect('/doctor/patientList');                                    }                                });                        }                    }                    else if(error){                        req.flash('toastMessage', 'ERROR :'+error);                        req.flash('toastStatus', 'success');                        res.redirect('/doctor/new');                    }                    else {                        req.flash('toastMessage', 'ERROR - DOC80');                        req.flash('toastStatus', 'success');                        res.redirect('/doctor/new');                    }                });        }        else{            req.flash('toastMessage', 'ERROR - Field80');            req.flash('toastStatus', 'success');            res.redirect('/doctor/new');        }    });};module.exports.listPatient = function (req,res,next) {    Doctor.findOne(        {'_id':req.session.user['_id']},        function (error,doc) {            if (error){                console.log(error);                req.flash('toastMessage', error);                req.flash('toastStatus', 'success');                res.redirect('/doctor/');            }            else if (doc){                // console.log(doc);                let patient = doc.patientList;                req.session.listArray = patient;                // console.log(patient);                next();            }            else {                let patient = 'none';                res.render(                    'pages/doctor/patientlist',                    {patientList: patient}                );            }        }    );};module.exports.fetchPatient = function(req,res,next){    // console.log(data);    let data = [];    let len = (req.session.listArray).length;    for (i=0;i<len;i++){        data.push(req.session.listArray[i]['patientNO']);    }    User.find(        {'uid':{$in: data}},        function (error,userList) {            if(error){                console.log(error);                req.flash('toastMessage', 'Error - F168');                req.flash('toastStatus', 'success');                res.redirect('/doctor');            }            else if(userList){                // console.log(userList);                res.render(                    'pages/doctor/patientlist',                    {patientList: userList}                );            }            else {                console.log('----------------error');                req.flash('toastMessage', 'Error - F181');                req.flash('toastStatus', 'success');                res.redirect('/doctor');            }        }        );    // res.render(    //     'pages/doctor/patientlist',    //     {patientList: req.session.listArray}    // );};module.exports.createPrescription = function (req, res, next) {    res.render('pages/doctor/prescription',{uid: req.params.id });};module.exports.addPrescription = function (req, res, next) {    let form = new formidable.IncomingForm();    form.parse(req, function(err, fields, files) {        let patientNo = fields.patientNO;        let symptomsArray = fields.symptoms;        let jsymptomsArray = JSON.parse(symptomsArray);        let jSymptomsData ={};        let notes = fields.notes;        let medicines = fields.medicineArray;        let jMedicines = JSON.parse(medicines);        let medicineName = Object.keys(JSON.parse(medicines));        let medicineLength = fields.noMed;        let date = new Date(Date.now());        let medicinesData ={};        for(i=0;i<=medicineLength;i++){            medicinesData[i]={'name':medicineName[i]} ;            medicinesData[i]['when']=jMedicines[medicineName[i]]['when'] ;            medicinesData[i]['duration']= jMedicines[medicineName[i]]['duration'];        }        for(i=0,len=jsymptomsArray.length;i<len;i++){            jSymptomsData[i]={'name': jsymptomsArray[i]['tag']};        }        let prescriptionData = {            pid : patientNo,            did : req.session.user['_id'],            prescription:[{                findings: jSymptomsData,                notes: notes,                medicine: medicinesData,                createdAt: date,                updatedAt: date,            }]        };        Prescription.findOne(            {'did':req.session.user['_id'],'pid':patientNo},            function(error,prescription){                if (error){                    console.log('ERROR : ',error);                    req.flash('toastMessage', 'Error - P244');                    req.flash('toastStatus', 'success');                    res.render('pages/doctor/prescription',{uid: req.params.id });                }                else if (prescription){                    Prescription.findOneAndUpdate(                        {'_id':prescription['_id']},                        {$push:                                {'prescription': {                                    findings: jSymptomsData,                                    notes: notes,                                    medicine: medicinesData,                                    createdAt: date,                                    updatedAt: date                                }}                        },                        {safe: true, upsert: true},                        function (error,data) {                            if (error){                                console.log(error);                                req.flash('toastMessage', 'ERROR - PU256');                                req.flash('toastStatus', 'success');                                res.redirect('/doctor');                            }                            else if (data){                                Doctor.findOneAndUpdate(                                    {'_id':req.session.user['_id']},                                    {$push:{'prescription':{'prescriptionid':data['_id'],'patintno':patientNo}}},                                    {safe: true, upsert: true},                                    function (error,docdata) {                                        if (error){                                            req.flash('toastMessage', 'ERROR - PD269');                                            req.flash('toastStatus', 'success');                                            res.redirect('/doctor');                                        }                                        else if (docdata){                                            User.findOneAndUpdate(                                                {'uid':patientNo},                                                {$push:{'prescription':{'prescriptionid':data['_id']}}},                                                function (error,udata) {                                                    if (error){                                                        req.flash('toastMessage', 'ERROR - PDU279');                                                        req.flash('toastStatus', 'success');                                                        res.redirect('/doctor');                                                    }                                                    else if (docdata){                                                        req.flash('toastMessage', 'prescription added successfully!');                                                        req.flash('toastStatus', 'success');                                                        res.redirect('/doctor');                                                    }                                                }                                            );                                        }                                });                            }                            else {                                req.flash('toastMessage', 'ERROR - Some Error');                                req.flash('toastStatus', 'success');                                res.redirect('/doctor/new');                            }                    });                }                else {                    let prescription  = new Prescription(prescriptionData);                    prescription.save(function(err,data){                        if (err){                            console.log('ERROR : ',err);                            req.flash('toastMessage', 'Error - P254');                            req.flash('toastStatus', 'success');                            res.render('pages/doctor/prescription',{uid: req.params.id });                        }                        else if (data){                            console.log("SUCCESS");                            console.log(data);                            Doctor.findOneAndUpdate(                                {'_id':req.session.user['_id']},                                {$push:{'prescription':{'prescriptionid':data['_id'],'patintno':patientNo}}},                                {safe: true, upsert: true},                                function (error,docdata) {                                    if (error){                                        req.flash('toastMessage', 'ERROR - PD269');                                        req.flash('toastStatus', 'success');                                        res.redirect('/doctor');                                    }                                    else if (docdata){                                        User.findOneAndUpdate(                                            {'uid':patientNo},                                            {$push:{'prescription':{'prescriptionid':data['_id']}}},                                            function (error,udata) {                                                if (error){                                                    req.flash('toastMessage', 'ERROR - PDU279');                                                    req.flash('toastStatus', 'success');                                                    res.redirect('/doctor');                                                }                                                else if (docdata){                                                    req.flash('toastMessage', 'prescription added successfully!');                                                    req.flash('toastStatus', 'success');                                                    res.redirect('/doctor');                                                }                                            }                                        );                                    }                                });                        }                    });                }            });    });};module.exports.pat = function(req,res,next){    Doctor.find(function(err, doc) {        // $data = json_decode($request->getContent(), true);        // let h = req.headers;        // let email = h.email;        // let pass = h.pass;        // if(email && pass=='reactjs'){            User.find(function (er,pat) {                Prescription.find((e,pres)=>{                    res.json({status:true,doctor:doc,user:pat,prescription:pres});                });            });        // }        // else{        //        //     res.json({status:401,error:'Auth error - Wrong password',email,pass})        // }    });}module.exports.pat1 = function(req,res,next){    Doctor.find(function(err, doc) {        // $data = json_decode($request->getContent(), true);        // let h = req.headers;        // let email = h.email;        // let pass = h.pass;        // if(email && pass=='reactjs'){        User.find(function (er,pat) {            Prescription.find((e,pres)=>{                res.json({status:true,doctor:doc,user:pat,prescription:pres});            });        });        // }        // else{        //        //     res.json({status:401,error:'Auth error - Wrong password',email,pass})        // }    });}// module.exports.updatePrescription = function (req, res, next) {//     Prescription.//     res.render('pages/doctor/prescription')// };module.exports.getIssues = function (req,res,next) {    Symptoms.find({ }, {_id:0 ,name: 1},function (error,data) {        if(error){            console.log(error);            res.json({ success: false, data:error });        }else if(data){            // console.log(data);            res.json({ success: true, data:data});        }        else {            res.json({ success: false, data:'No User' });        }    })};module.exports.getMedicine = function (req,res,next) {    Medicine.find({ }, {name:1,content:1 },function (error,data) {        if(error){            console.log(error);            res.json({ success: false, data:error });        }else if(data){            // console.log(data);            res.json({ success: true, data:data});        }        else {            res.json({ success: false, data:'No Data' });        }    })};module.exports.getHistory = function (req,res,next) {    Prescription.findOne(        {'pid':req.params.id,'did':req.session.user['_id']},        function (error,doc) {            if (error){                console.log('ERROR : ',error);                req.flash('toastMessage', 'Error - H406');                req.flash('toastStatus', 'success');                res.redirect('/doctor');            }            else if (doc){                User.findOne({'uid':req.params.id},{'name':1,'imageUrl':1},function (error,user) {                    if(user){                        res.render('pages/doctor/history',{'data':doc,'patient':user});                    }                    else {                        console.log('ERROR : ',error);                        req.flash('toastMessage', 'Error - HU417 No user found');                        req.flash('toastStatus', 'success');                        res.render('pages/doctor/patientlist');                    }                });            }            else {                req.flash('toastMessage', 'No History found');                req.flash('toastStatus', 'success');                res.redirect('/doctor');            }        }        );};module.exports.profile = function (req,res,next) {    console.log(req.params.id);  Doctor.findOne({'uid':req.params.id},function (error,user) {      if(user){          res.render('pages/doctor/profile',{'user':user});      }      else {          req.flash('toastMessage', 'Error'+error);          req.flash('toastStatus', 'success');          res.redirect('/doctor');      }  })};