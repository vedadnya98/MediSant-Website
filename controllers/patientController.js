var formidable = require('formidable');var User = require('../models/Users');var Doctor = require('../models/Doctors');let Symptoms = require('../models/Symptom');let Medicine = require('../models/Medicine');let Prescription = require('../models/Prescription');module.exports.index = function(req, res, next){    Prescription.find({'pid':req.session.user.uid},function (error,data) {        if(data){            res.render('pages/patient/home',{'data':data});        }        else {            res.render('pages/patient/home',{'data':null});        }    });};module.exports.profile = function (req,res,next) {    console.log(req.params.id);    User.findOne({'uid':req.params.id},function (error,user) {        if(user){            res.render('pages/patient/profile',{'user':user});        }        else {            req.flash('toastMessage', 'Error'+error);            req.flash('toastStatus', 'success');            res.redirect('/patient');        }    })};module.exports.editProfile = function (req,res,next) {    console.log(req.params.id);    User.findOne({'_id':req.params.id},function (error,user) {        if(user){            res.render('pages/patient/editProfile',{'user':user});        }        else {            req.flash('toastMessage', 'Error'+error);            req.flash('toastStatus', 'success');            res.redirect('/patient');        }    })};module.exports.updateProfile = function (req,res,next) {    let form = new formidable.IncomingForm();    form.parse(req, function(err, fields, files) {        User.findOneAndUpdate({'_id':req.session.user['_id']},            {                name : fields.name,                email : fields.email,                imageUrl: req.session.imageUrl,                gender : fields.gender,                dateOfBirth: fields.dateOfBirth,                bloodGroup : fields.bGroup,                contact : fields.contact,                role: 'patient',                allergies : JSON.stringify(fields.allergiesArray),                emergency: JSON.stringify(fields.emergencyArray)            },            function (error,data) {                if(data){                    console.log(data);                    req.flash('toastMessage', 'Updated Successfully');                    req.flash('toastStatus', 'success');                    res.redirect('/patient/profile');                }                else if (error){                    req.flash('toastMessage', 'Error'+error);                    req.flash('toastStatus', 'success');                    res.redirect('/patient/profile');                }                else {                    req.flash('toastMessage', 'Error');                    req.flash('toastStatus', 'success');                    res.redirect('/patient');                }            }        );    });};module.exports.history= function (req,res,next) {    let idArray = [];    Prescription.find({'pid':req.session.user.uid},function (error,data) {        if(data){            let len = data.length;            for(i=0;i<len;i++) {                idArray.push(data[i]['did']);            }            console.log(idArray);            Doctor.find({'_id':{$in:idArray}},function (err,docs) {                if (docs){                    res.render('pages/patient/history',{'data':data,'doc':docs});                }                else {                    console.log(err);                    req.flash('toastMessage', 'Error'+err);                    req.flash('toastStatus', 'success');                    res.redirect('/patient');                }            });        }        else {            res.render('pages/patient/home',{'data':null});        }    });};